/**
 * This file was generated by st-open-api
 */

import {http} from '../function/http';
import {openApi} from '../function/open-api';
import {IModelControllerListModelsByUserParameter} from '../interface/parameter/i-model-controller-list-models-by-user-parameter';
import {IModelEntity} from '../interface/components/i-model-entity';
import {IModelDto} from '../interface/components/i-model-dto';
import {IModelControllerGetModelParameter} from '../interface/parameter/i-model-controller-get-model-parameter';

export class ModelService {

    modelControllerListModels = async (): Promise<void> => {
    
        await http({
                method: 'GET',
                url: `${openApi.endpointUrl}/model/all`,
                header: {
                },
            },
            openApi.requestInterceptor
        );
    };

    modelControllerListModelsByUser = async (parameter: IModelControllerListModelsByUserParameter): Promise<void> => {
        const pathParams = {
            'id': parameter.id,
        };
    
        await http({
                method: 'GET',
                url: `${openApi.endpointUrl}/model/all/{id}`,
                urlParameter: pathParams,
                header: {
                },
            },
            openApi.requestInterceptor
        );
    };

    modelControllerChangedModels = async (): Promise<void> => {
    
        await http({
                method: 'GET',
                url: `${openApi.endpointUrl}/model/changes`,
                header: {
                },
            },
            openApi.requestInterceptor
        );
    };

    modelControllerCreate = async (): Promise<void> => {
    
        await http({
                method: 'POST',
                url: `${openApi.endpointUrl}/model/create`,
                header: {
                },
            },
            openApi.requestInterceptor
        );
    };

    modelControllerUpsert = async (body: IModelEntity): Promise<void> => {
    
        await http({
                method: 'POST',
                url: `${openApi.endpointUrl}/model/upsert`,
                header: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(body),
            },
            openApi.requestInterceptor
        );
    };

    modelControllerGetModel = async (parameter: IModelControllerGetModelParameter): Promise<IModelDto> => {
        const pathParams = {
            'id': parameter.id,
            'version': parameter.version,
        };
    
        const response = await http({
                method: 'GET',
                url: `${openApi.endpointUrl}/model/{id}/{version}`,
                urlParameter: pathParams,
                header: {
                    Accept: 'application/json',
                },
            },
            openApi.requestInterceptor
        );
        return JSON.parse(response);
    };

}