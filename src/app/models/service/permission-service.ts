/**
 * This file was generated by st-open-api
 */

import {http} from '../function/http';
import {openApi} from '../function/open-api';
import {IPermissionControllerGetPermissionByUserAndModelParameter} from '../interface/parameter/i-permission-controller-get-permission-by-user-and-model-parameter';
import {IPermissionEntity} from '../interface/components/i-permission-entity';
import {IPermissionControllerUpdateParameter} from '../interface/parameter/i-permission-controller-update-parameter';
import {IPermissionControllerDeleteParameter} from '../interface/parameter/i-permission-controller-delete-parameter';

export class PermissionService {

    permissionControllerList = async (): Promise<void> => {
    
        await http({
                method: 'GET',
                url: `${openApi.endpointUrl}/permission`,
                header: {
                },
            },
            openApi.requestInterceptor
        );
    };

    permissionControllerGetPermissionByUserAndModel = async (parameter: IPermissionControllerGetPermissionByUserAndModelParameter): Promise<void> => {
        const pathParams = {
            'userID': parameter.userID,
            'modelID': parameter.modelID,
        };
    
        await http({
                method: 'GET',
                url: `${openApi.endpointUrl}/permission/{userID}/{modelID}`,
                urlParameter: pathParams,
                header: {
                },
            },
            openApi.requestInterceptor
        );
    };

    permissionControllerCreate = async (body: IPermissionEntity): Promise<void> => {
    
        await http({
                method: 'POST',
                url: `${openApi.endpointUrl}/permission/create`,
                header: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(body),
            },
            openApi.requestInterceptor
        );
    };

    permissionControllerUpdate = async (parameter: IPermissionControllerUpdateParameter): Promise<void> => {
        const pathParams = {
            'id': parameter.id,
        };
    
        await http({
                method: 'PUT',
                url: `${openApi.endpointUrl}/permission/update/{id}`,
                urlParameter: pathParams,
                header: {
                },
            },
            openApi.requestInterceptor
        );
    };

    permissionControllerGetModel = async (): Promise<void> => {
    
        await http({
                method: 'GET',
                url: `${openApi.endpointUrl}/permission/{id}`,
                header: {
                },
            },
            openApi.requestInterceptor
        );
    };

    permissionControllerDelete = async (parameter: IPermissionControllerDeleteParameter): Promise<void> => {
        const pathParams = {
            'id': parameter.id,
        };
    
        await http({
                method: 'DELETE',
                url: `${openApi.endpointUrl}/permission/{id}`,
                urlParameter: pathParams,
                header: {
                },
            },
            openApi.requestInterceptor
        );
    };

}